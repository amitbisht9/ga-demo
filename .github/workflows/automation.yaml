# Write a github Action to run the logon.robot script using ubuntu-latest runner
# add python libraries for chrome driver
name: Automation

on: workflow_dispatch
# on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Chrome browser
        run: |
          sudo apt-get update
          wget -q -O /tmp/chrome.deb "https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_114.0.5735.90-1_amd64.deb"
          sudo dpkg -i /tmp/chrome.deb
          sudo apt-get install -f
          google-chrome --version
          whereis google-chrome

      - name: Install Chrome WebDriver
        run: |
          ps -ef | grep --color=auto -i chrome
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          echo "################## CHROME VERSION: $CHROME_VERSION ##################"
          wget -q -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_linux64.zip"
          sudo unzip /tmp/chromedriver.zip -d /usr/local/bin/
          chromedriver --version
          sudo chmod +x /usr/local/bin/chromedriver

  Automation:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run automation
        run: |
          robot --outputdir results login.robot

      - name: Archive test results
        uses: actions/upload-artifact@v2
        with:
          name: Robot_Framework_Results
          path: results/**

      - name: Upload test results to Azure Test Plans
        run: |
          # Define Azure DevOps organization, project, test plan ID, and personal access token (PAT)
          azdevops_organization="amitabisht"
          azdevops_project="test"
          azdevops_test_plan_id="3"
          azdevops_pat="${{ secrets.AZURE_PAT }}"
        
          # Upload Robot Framework test results to Azure Test Plans using curl
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Basic $(echo -n :${azdevops_pat} | base64)" \
            --data-binary "@results/output.xml" \
            "https://dev.azure.com/${azdevops_organization}/${azdevops_project}/_apis/test/runs/${azdevops_test_plan_id}/results?api-version=6.0"
