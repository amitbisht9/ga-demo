name: Publish Result

on: workflow_dispatch
# on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  test-publish:
    runs-on: ubuntu-latest
    steps:

      - name: Install jq
        run: |
          sudo apt-get update && sudo apt-get install jq -y

      - name: Upload test results to Azure Test Plans
        id: fetch-test-point-ids
        run: |
          # Define Azure DevOps organization, project, test plan ID, and personal access token (PAT)
          azdevops_organization="amitabisht"
          azdevops_project="test"
          azdevops_test_plan_id="2azure devops"
          azdevops_pat="${{ secrets.AZURE_PAT }}"
        
          ######Get Test PointIDs######
          response=$(curl -H "Content-Type: application/json" -H "Authorization: Basic $(echo -n :${azdevops_pat} | base64)" \
           "https://dev.azure.com/amitabisht/test/_apis/test/Plans/15/suites/16/points?api-version=6.0")
          
          # Parse the response using jq to extract TestPointIds and format them as an array
          test_point_ids="["
            for id in $(echo $response | jq -r '.value[].id'); do
              test_point_ids+=" $id,"
            done
            # Remove the trailing comma and add closing bracket
            test_point_ids="${test_point_ids%,}]"

          echo $test_point_ids

          ######Create Test Run######
          curl POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Basic $(echo -n :${azdevops_pat} | base64)" \
            "https://dev.azure.com/amitabisht/test/_apis/test/runs?api-version=6.0" \
            -d '[
              {
              "name": "AppAutomationTest",
              "plan": {
                "id": "15"
              },
              "pointIds": $test_point_ids
            }
          ]'
